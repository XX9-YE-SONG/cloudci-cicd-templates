name: Cloud CICD CDK workflow

on:
  workflow_call:
    inputs:
      test-account-number:
        required: true
        type: string
      prod-account-number:
        required: true
        type: string
      artifact-bucket-name:
        required: true
        type: string
      tool-bucket-name:
        required: true
        type: string
      org-name:
       required: true
       type: string
      product-name:
        required: true
        type: string
      module-name:
        required: true
        type: string

# Set the default permissions of the GITHUB_TOKEN to none for security purposes
permissions: {}

env:
  TEST_ENV: test
  PROD_ENV: prod
  TEST_ACCOUNT_NUMBER: ${{ inputs.test-account-number }}
  PROD_ACCOUNT_NUMBER: ${{ inputs.prod-account-number }}
  AWS_DEFAULT_REGION: ap-northeast-1
  ARTIFACT_BUCKET_NAME: ${{ inputs.artifact-bucket-name }}
  TOOL_BUCKET_NAME: ${{ inputs.tool-bucket-name }}
  ORG_NAME: ${{ inputs.org-name }}
  PRODUCT_NAME: ${{ inputs.product-name }}
  MODULE_NAME: ${{ inputs.module-name }}
  KENOBI_VERSION: 3.0.4

jobs:
  python-lint:
    name: Python lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

  python-scan:
    name: Python scan
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

  dockerfile-scan:
    name: Dockerfile scan
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

  run-pytest:
    name: Run pytest
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

  generate-version:
    name: Generate version
    needs: [python-lint, python-scan, dockerfile-scan, run-pytest]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    outputs:
      version-full: ${{ steps.gen.outputs.version-full }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Generate version
        id: gen
        run: |
          echo "version-full=v1.1.1" >> $GITHUB_OUTPUT

  synth-cdk-test:
    name: Synth CDK test
    needs: [generate-version]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    env:
      VERSION_FULL: ${{ needs.generate-version.outputs.version-full }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5  

      - name: Synth CDK test
        run: |
          echo ${{ env.VERSION_FULL }}

  synth-cdk-prod:
    name: Synth CDK prod
    needs: [generate-version]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    env:
      VERSION_FULL: ${{ needs.generate-version.outputs.version-full }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5  

      - name: Synth CDK prod
        run: |
          echo ${{ env.VERSION_FULL }}

  build-lambda-image:
    name: Build Lambda image
    needs: [generate-version]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    env:
      VERSION_FULL: ${{ needs.generate-version.outputs.version-full }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5  

      - name: Build Lambda image
        run: |    
          echo ${{ env.VERSION_FULL }}

























  
  
  
